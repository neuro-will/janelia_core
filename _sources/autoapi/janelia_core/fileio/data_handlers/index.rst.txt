:py:mod:`janelia_core.fileio.data_handlers`
===========================================

.. py:module:: janelia_core.fileio.data_handlers

.. autoapi-nested-parse::

   Tools for working with data that is saved on disk.

   The purpose of these tools is to allow a user to interface with data objects in a standard way
   without needing to know if those data objects have been loaded from file or not.  Users can
   reference data in these objects, and these objects will handle loading data from disk (and
   storing that in memory for future reference).



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   janelia_core.fileio.data_handlers.NDArrayHandler




.. py:class:: NDArrayHandler(folder: str, file_name: str, data: numpy.ndarray = None)

   An object for working with numpy.ndarray data.

   Creates an NDArrayHandler object.

   Args:
       folder: The path to the folder where the file with the data for this object
       is or will be stored.

       file_name: The name of the file which does or will have the data for this object.

       data: The ndarray with the data for this object. Can be left as None.


   .. py:method:: __getitem__(self, sl: slice) -> numpy.ndarray

      Gets data from the object.

      Data will be loaded from disk and saved in memory if this is the first
      time referencing data for this object.

      Args:
          sl: The slice of data to return.

      Returns:
          data: The requested data

      Raises:
          RuntimeError: If NDArrayHandler object has no data to get.



   .. py:method:: __setitem__(self, sl: slice, value: numpy.ndarray)

      Sets data for a slice of an NDArrayHandler object.

      Note: The NDArrayHandler must have some data set already.  To initially set the
      data of the object use the set_data() method.

      Args:
          sl: The slice for data to set

          value: The value to set

      Raises:
          RuntimeError: If the object has no data.



   .. py:method:: set_data(self, data: numpy.ndarray)

      Sets the data of the object.

      Args:
          data: the data for the object.


   .. py:method:: load_data(self)

      Loads data from file into memory.

      Raises:
          FileNotFoundError: If the file containing the data is not found.


   .. py:method:: save_data(self)

      Saves the data in a NDArrayObject to disk.


   .. py:method:: __getstate__(self)

      Returns a new object for pickling and saves the data of this object to file.

      Note: Calling this function will have the side effect of saving the objects data to file.
      This design decision was made because often __getstate__ will be called when pickling a
      NDArrayObject.  In this case, we don't want the data of the object to be saved in data
      file to disk and not in pickled object.  Thus we make sure the data on disk is updated
      before returning an object for pickling which has it's _data attribute set to None.




